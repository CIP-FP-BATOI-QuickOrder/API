package ApiQuickOrder.models;
// Generated 8 may 2023 19:23:56 by Hibernate Tools 4.3.6.Final

import jakarta.persistence.*;

import java.util.HashSet;
import java.util.Set;

/**
 * Restaurant generated by hbm2java
 */
@Entity
@Table(name = "restaurant", catalog = "QuickOrder", uniqueConstraints = @UniqueConstraint(columnNames = "nif"))
public class Restaurant implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private Address address;
	private String name;
	private String nif;
	private String password;
	private String photo;
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<Product> products = new HashSet<Product>(0);

	public Restaurant() {
	}

	public Restaurant(Address address, String name, String nif, String password, String photo, Set<Order> orders,
			Set<Product> products) {
		this.address = address;
		this.name = name;
		this.nif = nif;
		this.password = password;
		this.photo = photo;
		this.orders = orders;
		this.products = products;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "nif", unique = true, length = 9)
	public String getNif() {
		return this.nif;
	}

	public void setNif(String nif) {
		this.nif = nif;
	}

	@Column(name = "password", length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "photo", length = 50)
	public String getPhoto() {
		return this.photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "restaurant")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "restaurant")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
